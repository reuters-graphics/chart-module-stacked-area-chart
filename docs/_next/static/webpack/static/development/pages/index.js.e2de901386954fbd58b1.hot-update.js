webpackHotUpdate("static/development/pages/index.js",{

/***/ "./src/lib/chart.js":
/*!**************************!*\
  !*** ./src/lib/chart.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _base_ChartComponent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base/ChartComponent */ \"./src/lib/base/ChartComponent.js\");\n/* harmony import */ var _utils_d3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/d3 */ \"./src/lib/utils/d3.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/utils */ \"./src/lib/utils/utils.js\");\n/* harmony import */ var _reuters_graphics_d3_locale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @reuters-graphics/d3-locale */ \"./node_modules/@reuters-graphics/d3-locale/dist/index.js\");\n/* harmony import */ var _reuters_graphics_d3_locale__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_reuters_graphics_d3_locale__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @reuters-graphics/graphics-atlas-client */ \"./node_modules/@reuters-graphics/graphics-atlas-client/dist/index.js\");\n/* harmony import */ var _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_12__);\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar client = new _reuters_graphics_graphics_atlas_client__WEBPACK_IMPORTED_MODULE_12___default.a();\n\nvar StackedAreaChart = /*#__PURE__*/function (_ChartComponent) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(StackedAreaChart, _ChartComponent);\n\n  var _super = _createSuper(StackedAreaChart);\n\n  function StackedAreaChart() {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, StackedAreaChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"defaultProps\", {\n      stroke: '#2f353f',\n      stroke_width: 0.5,\n      fills: ['rgba(255,255,255,0.9)', 'rgba(255,255,255,0.8)', 'rgba(255,255,255,0.7)', 'rgba(255,255,255,0.55)', 'rgba(255,255,255,0.45)', 'rgba(255,255,255,0.25)'],\n      margin: {\n        left: 10,\n        right: 35,\n        top: 20,\n        bottom: 20\n      },\n      height: 300,\n      avg_days: 7,\n      locale: 'en',\n      absolute: false,\n      highlight_variable: 'Asia',\n      highlight_color: '#fce587',\n      chart_formats: {\n        number: ',',\n        percent: '.0%',\n        date: '%b'\n      }\n    });\n\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(StackedAreaChart, [{\n    key: \"draw\",\n    value: function draw() {\n      var dateParse = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].timeParse('%Y-%m-%d');\n      var data = this.data();\n      var props = this.props();\n      var node = this.selection().node();\n      var locale = new _reuters_graphics_d3_locale__WEBPACK_IMPORTED_MODULE_11___default.a(props.locale);\n      var formatPer = locale.format(props.chart_formats.percent);\n      var formatNum = locale.format(props.chart_formats.number);\n      var dateFormat = locale.formatTime(props.chart_formats.date);\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          width = _node$getBoundingClie.width;\n\n      var reshapedData = [];\n      var regionList = Object(lodash__WEBPACK_IMPORTED_MODULE_9__[\"uniq\"])(data.map(function (d) {\n        return d.region;\n      }));\n      var dateWise = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].nest().key(function (d) {\n        return d.date;\n      }).entries(data);\n      dateWise.forEach(function (d, index) {\n        var obj = {\n          date: dateParse(d.key),\n          total: _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].sum(d.values, function (e) {\n            return e.count;\n          })\n        };\n        regionList.forEach(function (e) {\n          return obj[e] = 0;\n        });\n        d.values.forEach(function (e) {\n          obj[e.region] = e.count;\n        });\n        reshapedData.push(obj);\n      });\n      reshapedData = reshapedData.sort(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_10__[\"compareValues\"])('date'));\n      reshapedData.forEach(function (d, index) {\n        regionList.forEach(function (e) {\n          d['mean_' + e] = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].mean(reshapedData.slice(index - props.avg_days, index), function (f) {\n            return +f[e];\n          }); // avg calc\n\n          if (!d['mean_' + e]) {\n            d['mean_' + e] = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].mean(reshapedData.slice(0, index), function (f) {\n              return +f[e];\n            });\n          }\n\n          if (index === 0) {\n            d['mean_' + e] = d[e];\n          }\n        });\n        d.mean_total = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].mean(reshapedData.slice(index - props.avg_days, index), function (f) {\n          return +f.total;\n        }); // avg calc\n\n        if (!d.mean_total) {\n          d.mean_total = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].mean(reshapedData.slice(0, index), function (f) {\n            return +f.total;\n          });\n        }\n\n        if (index === 0) {\n          d.mean_total = d.total;\n        }\n      });\n      var maxData = reshapedData[reshapedData.length - 1];\n      var meanList = regionList.map(function (d) {\n        return 'mean_' + d;\n      });\n      regionList = Object(lodash__WEBPACK_IMPORTED_MODULE_9__[\"sortBy\"])(meanList, function (d) {\n        return +maxData[d];\n      });\n      var seriesDeath = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].stack().keys(regionList)(reshapedData);\n      var scaleX = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].scaleTime().range([0, width - props.margin.left - props.margin.right]).domain(_utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].extent(reshapedData, function (d) {\n        return d.date;\n      }));\n      var scaleYPer = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].scaleLinear().range([props.height - props.margin.top - props.margin.bottom, 0]).domain([0, 1]);\n      var scaleYNum = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].scaleLinear().range([props.height - props.margin.top - props.margin.bottom, 0]).domain([0, _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].max(reshapedData, function (d) {\n        return d.mean_total;\n      })]);\n      var areaDeath = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].area().x(function (d) {\n        return scaleX(d.data.date);\n      }).y0(function (d) {\n        return props.absolute ? scaleYNum(d[0]) : scaleYPer(d[0] / d.data.mean_total);\n      }).y1(function (d) {\n        return props.absolute ? scaleYNum(d[1]) : scaleYPer(d[1] / d.data.mean_total);\n      }).curve(_utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].curveMonotoneX);\n      var transition = _utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].transition().duration(750);\n      var labels = this.selection().appendSelect('div.label-container').selectAll('div.label').data(seriesDeath.reverse(), function (d, i) {\n        return d.key;\n      });\n      var labelInner = labels.enter().append('div').attr('class', 'label').merge(labels);\n      labelInner.appendSelect('div.label-box').style('background', function (d, i) {\n        return props.fills[i];\n      });\n      labelInner.appendSelect('div.label-text').text(function (d) {\n        return client.getRegion(d.key.split('_')[1]).translations[props.locale];\n      });\n      labels.exit().remove();\n      var g = this.selection().appendSelect('svg') // see docs in ./utils/d3.js\n      .attr('width', width).attr('height', props.height).appendSelect('g').attr('transform', \"translate(\".concat(props.margin.left, \", \").concat(props.margin.top, \")\"));\n      var deathChartPaths = g.appendSelect('g.areas').selectAll('g.area').data(seriesDeath).join('g').attr('class', 'area');\n      deathChartPaths.append('path');\n      deathChartPaths.select('path').attr('class', function (d) {\n        console.log(d.key);\n        return d.key;\n      }).transition(transition).attr('fill', function (d, i) {\n        return props.fills[i] ? props.fills[i] : '#000';\n      }).attr('d', areaDeath).attr('stroke', props.stroke).attr('stroke-width', props.stroke_width);\n      g.appendSelect('g.axis--y.axis').transition(transition).attr('transform', \"translate(\".concat(width - props.margin.right - props.margin.left, \",0)\")).call(_utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].axisRight(props.absolute ? scaleYNum : scaleYPer).ticks(3).tickFormat(props.absolute ? formatNum : formatPer));\n      g.appendSelect('g.axis--x.axis').transition(transition).attr('transform', \"translate(0,\".concat(props.height - props.margin.bottom - props.margin.top, \")\")).call(_utils_d3__WEBPACK_IMPORTED_MODULE_8__[\"default\"].axisBottom(scaleX).ticks(4).tickFormat(dateFormat));\n      return this;\n    }\n  }]);\n\n  return StackedAreaChart;\n}(_base_ChartComponent__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (StackedAreaChart);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NoYXJ0LmpzPzdiYjgiXSwibmFtZXMiOlsiY2xpZW50IiwiQXRsYXNNZXRhZGF0YUNsaWVudCIsIlN0YWNrZWRBcmVhQ2hhcnQiLCJzdHJva2UiLCJzdHJva2Vfd2lkdGgiLCJmaWxscyIsIm1hcmdpbiIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsImhlaWdodCIsImF2Z19kYXlzIiwibG9jYWxlIiwiYWJzb2x1dGUiLCJoaWdobGlnaHRfdmFyaWFibGUiLCJoaWdobGlnaHRfY29sb3IiLCJjaGFydF9mb3JtYXRzIiwibnVtYmVyIiwicGVyY2VudCIsImRhdGUiLCJkYXRlUGFyc2UiLCJkMyIsInRpbWVQYXJzZSIsImRhdGEiLCJwcm9wcyIsIm5vZGUiLCJzZWxlY3Rpb24iLCJEM0xvY2FsZSIsImZvcm1hdFBlciIsImZvcm1hdCIsImZvcm1hdE51bSIsImRhdGVGb3JtYXQiLCJmb3JtYXRUaW1lIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJyZXNoYXBlZERhdGEiLCJyZWdpb25MaXN0IiwidW5pcSIsIm1hcCIsImQiLCJyZWdpb24iLCJkYXRlV2lzZSIsIm5lc3QiLCJrZXkiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImluZGV4Iiwib2JqIiwidG90YWwiLCJzdW0iLCJ2YWx1ZXMiLCJlIiwiY291bnQiLCJwdXNoIiwic29ydCIsImNvbXBhcmVWYWx1ZXMiLCJtZWFuIiwic2xpY2UiLCJmIiwibWVhbl90b3RhbCIsIm1heERhdGEiLCJsZW5ndGgiLCJtZWFuTGlzdCIsInNvcnRCeSIsInNlcmllc0RlYXRoIiwic3RhY2siLCJrZXlzIiwic2NhbGVYIiwic2NhbGVUaW1lIiwicmFuZ2UiLCJkb21haW4iLCJleHRlbnQiLCJzY2FsZVlQZXIiLCJzY2FsZUxpbmVhciIsInNjYWxlWU51bSIsIm1heCIsImFyZWFEZWF0aCIsImFyZWEiLCJ4IiwieTAiLCJ5MSIsImN1cnZlIiwiY3VydmVNb25vdG9uZVgiLCJ0cmFuc2l0aW9uIiwiZHVyYXRpb24iLCJsYWJlbHMiLCJhcHBlbmRTZWxlY3QiLCJzZWxlY3RBbGwiLCJyZXZlcnNlIiwiaSIsImxhYmVsSW5uZXIiLCJlbnRlciIsImFwcGVuZCIsImF0dHIiLCJtZXJnZSIsInN0eWxlIiwidGV4dCIsImdldFJlZ2lvbiIsInNwbGl0IiwidHJhbnNsYXRpb25zIiwiZXhpdCIsInJlbW92ZSIsImciLCJkZWF0aENoYXJ0UGF0aHMiLCJqb2luIiwic2VsZWN0IiwiY29uc29sZSIsImxvZyIsImNhbGwiLCJheGlzUmlnaHQiLCJ0aWNrcyIsInRpY2tGb3JtYXQiLCJheGlzQm90dG9tIiwiQ2hhcnRDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHLElBQUlDLCtFQUFKLEVBQWY7O0lBRU1DLGdCOzs7Ozs7Ozs7Ozs7Ozs7O3VOQUNXO0FBQ2JDLFlBQU0sRUFBRSxTQURLO0FBRWJDLGtCQUFZLEVBQUUsR0FGRDtBQUdiQyxXQUFLLEVBQUUsQ0FBQyx1QkFBRCxFQUNMLHVCQURLLEVBRUwsdUJBRkssRUFHTCx3QkFISyxFQUlMLHdCQUpLLEVBS0wsd0JBTEssQ0FITTtBQVNiQyxZQUFNLEVBQUU7QUFBRUMsWUFBSSxFQUFFLEVBQVI7QUFBWUMsYUFBSyxFQUFFLEVBQW5CO0FBQXVCQyxXQUFHLEVBQUUsRUFBNUI7QUFBZ0NDLGNBQU0sRUFBRTtBQUF4QyxPQVRLO0FBVWJDLFlBQU0sRUFBRSxHQVZLO0FBV2JDLGNBQVEsRUFBRSxDQVhHO0FBWWJDLFlBQU0sRUFBRSxJQVpLO0FBYWJDLGNBQVEsRUFBRSxLQWJHO0FBY2JDLHdCQUFrQixFQUFFLE1BZFA7QUFlYkMscUJBQWUsRUFBRSxTQWZKO0FBZ0JiQyxtQkFBYSxFQUFFO0FBQ2JDLGNBQU0sRUFBRSxHQURLO0FBRWJDLGVBQU8sRUFBRSxLQUZJO0FBR2JDLFlBQUksRUFBRTtB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WCxRQUFOLEdBQWlCNkQsU0FBakIsR0FBNkJGLFNBQTFDLEVBQXFEc0MsS0FBckQsQ0FBMkQsQ0FBM0QsRUFBOERDLFVBQTlELENBQXlFdkYsS0FBSyxDQUFDWCxRQUFOLEdBQWlCaUIsU0FBakIsR0FBNkJGLFNBQXRHLENBSFI7QUFLQTBFLE9BQUMsQ0FBQ2hCLFlBQUYsQ0FBZSxnQkFBZixFQUNHSCxVQURILENBQ2NBLFVBRGQsRUFFR1UsSUFGSCxDQUVRLFdBRlIsd0JBRW9DckUsS0FBSyxDQUFDZCxNQUFOLEdBQWVjLEtBQUssQ0FBQ25CLE1BQU4sQ0FBYUksTUFBNUIsR0FBcUNlLEtBQUssQ0FBQ25CLE1BQU4sQ0FBYUcsR0FGdEYsUUFHR29HLElBSEgsQ0FHUXZGLGlEQUFFLENBQUMyRixVQUFILENBQWM3QyxNQUFkLEVBQXNCMkMsS0FBdEIsQ0FBNEIsQ0FBNUIsRUFBK0JDLFVBQS9CLENBQTBDaEYsVUFBMUMsQ0FIUjtBQUtBLGFBQU8sSUFBUDtBQUNEOzs7O0VBOUo0QmtGLDREOztBQWlLaEJoSCwrRUFBZiIsImZpbGUiOiIuL3NyYy9saWIvY2hhcnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2hhcnRDb21wb25lbnQgZnJvbSAnLi9iYXNlL0NoYXJ0Q29tcG9uZW50JztcbmltcG9ydCBkMyBmcm9tICcuL3V0aWxzL2QzJztcbmltcG9ydCB7IHVuaXEsIHNvcnRCeSB9IGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBjb21wYXJlVmFsdWVzIH0gZnJvbSAnLi91dGlscy91dGlscyc7XG5pbXBvcnQgRDNMb2NhbGUgZnJvbSAnQHJldXRlcnMtZ3JhcGhpY3MvZDMtbG9jYWxlJztcbmltcG9ydCBBdGxhc01ldGFkYXRhQ2xpZW50IGZyb20gJ0ByZXV0ZXJzLWdyYXBoaWNzL2dyYXBoaWNzLWF0bGFzLWNsaWVudCc7XG5jb25zdCBjbGllbnQgPSBuZXcgQXRsYXNNZXRhZGF0YUNsaWVudCgpO1xuXG5jbGFzcyBTdGFja2VkQXJlYUNoYXJ0IGV4dGVuZHMgQ2hhcnRDb21wb25lbnQge1xuICBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc3Ryb2tlOiAnIzJmMzUzZicsXG4gICAgc3Ryb2tlX3dpZHRoOiAwLjUsXG4gICAgZmlsbHM6IFsncmdiYSgyNTUsMjU1LDI1NSwwLjkpJyxcbiAgICAgICdyZ2JhKDI1NSwyNTUsMjU1LDAuOCknLFxuICAgICAgJ3JnYmEoMjU1LDI1NSwyNTUsMC43KScsXG4gICAgICAncmdiYSgyNTUsMjU1LDI1NSwwLjU1KScsXG4gICAgICAncmdiYSgyNTUsMjU1LDI1NSwwLjQ1KScsXG4gICAgICAncmdiYSgyNTUsMjU1LDI1NSwwLjI1KSddLFxuICAgIG1hcmdpbjogeyBsZWZ0OiAxMCwgcmlnaHQ6IDM1LCB0b3A6IDIwLCBib3R0b206IDIwIH0sXG4gICAgaGVpZ2h0OiAzMDAsXG4gICAgYXZnX2RheXM6IDcsXG4gICAgbG9jYWxlOiAnZW4nLFxuICAgIGFic29sdXRlOiBmYWxzZSxcbiAgICBoaWdobGlnaHRfdmFyaWFibGU6ICdBc2lhJyxcbiAgICBoaWdobGlnaHRfY29sb3I6ICcjZmNlNTg3JyxcbiAgICBjaGFydF9mb3JtYXRzOiB7XG4gICAgICBudW1iZXI6ICcsJyxcbiAgICAgIHBlcmNlbnQ6ICcuMCUnLFxuICAgICAgZGF0ZTogJyViJyxcbiAgICB9LFxuICB9O1xuXG4gIGRyYXcoKSB7XG4gICAgY29uc3QgZGF0ZVBhcnNlID0gZDMudGltZVBhcnNlKCclWS0lbS0lZCcpO1xuXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YSgpO1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wcygpO1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLnNlbGVjdGlvbigpLm5vZGUoKTtcbiAgICBjb25zdCBsb2NhbGUgPSBuZXcgRDNMb2NhbGUocHJvcHMubG9jYWxlKTtcbiAgICBjb25zdCBmb3JtYXRQZXIgPSBsb2NhbGUuZm9ybWF0KHByb3BzLmNoYXJ0X2Zvcm1hdHMucGVyY2VudCk7XG4gICAgY29uc3QgZm9ybWF0TnVtID0gbG9jYWxlLmZvcm1hdChwcm9wcy5jaGFydF9mb3JtYXRzLm51bWJlcik7XG4gICAgY29uc3QgZGF0ZUZvcm1hdCA9IGxvY2FsZS5mb3JtYXRUaW1lKHByb3BzLmNoYXJ0X2Zvcm1hdHMuZGF0ZSk7XG4gICAgY29uc3QgeyB3aWR0aCB9ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBsZXQgcmVzaGFwZWREYXRhID0gW107XG4gICAgbGV0IHJlZ2lvbkxpc3QgPSB1bmlxKGRhdGEubWFwKGQgPT4gZC5yZWdpb24pKTtcbiAgICBjb25zdCBkYXRlV2lzZSA9IGQzLm5lc3QoKVxuICAgICAgLmtleShkID0+IGQuZGF0ZSlcbiAgICAgIC5lbnRyaWVzKGRhdGEpO1xuXG4gICAgZGF0ZVdpc2UuZm9yRWFjaChmdW5jdGlvbihkLCBpbmRleCkge1xuICAgICAgY29uc3Qgb2JqID0ge1xuICAgICAgICBkYXRlOiBkYXRlUGFyc2UoZC5rZXkpLFxuICAgICAgICB0b3RhbDogZDMuc3VtKGQudmFsdWVzLCBlID0+IGUuY291bnQpLFxuICAgICAgfTtcbiAgICAgIHJlZ2lvbkxpc3QuZm9yRWFjaChlID0+IG9ialtlXSA9IDApO1xuICAgICAgZC52YWx1ZXMuZm9yRWFjaChmdW5jdGlvbihlKSB7XG4gICAgICAgIG9ialtlLnJlZ2lvbl0gPSBlLmNvdW50O1xuICAgICAgfSk7XG4gICAgICByZXNoYXBlZERhdGEucHVzaChvYmopO1xuICAgIH0pO1xuXG4gICAgcmVzaGFwZWREYXRhID0gcmVzaGFwZWREYXRhLnNvcnQoY29tcGFyZVZhbHVlcygnZGF0ZScpKTtcblxuICAgIHJlc2hhcGVkRGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGQsIGluZGV4KSB7XG4gICAgICByZWdpb25MaXN0LmZvckVhY2goKGUpID0+IHtcbiAgICAgICAgZFsnbWVhbl8nICsgZV0gPSBkMy5tZWFuKHJlc2hhcGVkRGF0YS5zbGljZSgoaW5kZXggLSBwcm9wcy5hdmdfZGF5cyksIGluZGV4KSwgZiA9PiArZltlXSApOyAvLyBhdmcgY2FsY1xuICAgICAgICBpZiAoIWRbJ21lYW5fJyArIGVdKSB7XG4gICAgICAgICAgZFsnbWVhbl8nICsgZV0gPSBkMy5tZWFuKHJlc2hhcGVkRGF0YS5zbGljZSgwLCBpbmRleCksIGYgPT4gK2ZbZV0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICAgIGRbJ21lYW5fJyArIGVdID0gZFtlXTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBkLm1lYW5fdG90YWwgPSBkMy5tZWFuKHJlc2hhcGVkRGF0YS5zbGljZSgoaW5kZXggLSBwcm9wcy5hdmdfZGF5cyksIGluZGV4KSwgZiA9PiArZi50b3RhbCk7IC8vIGF2ZyBjYWxjXG4gICAgICBpZiAoIWQubWVhbl90b3RhbCkge1xuICAgICAgICBkLm1lYW5fdG90YWwgPSBkMy5tZWFuKHJlc2hhcGVkRGF0YS5zbGljZSgwLCBpbmRleCksIGYgPT4gK2YudG90YWwpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgZC5tZWFuX3RvdGFsID0gZC50b3RhbDtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBtYXhEYXRhID0gcmVzaGFwZWREYXRhW3Jlc2hhcGVkRGF0YS5sZW5ndGggLSAxXTtcbiAgICBjb25zdCBtZWFuTGlzdCA9IHJlZ2lvbkxpc3QubWFwKGQgPT4gJ21lYW5fJyArIGQpO1xuICAgIHJlZ2lvbkxpc3QgPSBzb3J0QnkobWVhbkxpc3QsIGQgPT4gK21heERhdGFbZF0pO1xuXG4gICAgY29uc3Qgc2VyaWVzRGVhdGggPSBkMy5zdGFjaygpLmtleXMocmVnaW9uTGlzdCkocmVzaGFwZWREYXRhKTtcbiAgICBjb25zdCBzY2FsZVggPSBkMy5zY2FsZVRpbWUoKVxuICAgICAgLnJhbmdlKFswLCB3aWR0aCAtIHByb3BzLm1hcmdpbi5sZWZ0IC0gcHJvcHMubWFyZ2luLnJpZ2h0XSlcbiAgICAgIC5kb21haW4oZDMuZXh0ZW50KHJlc2hhcGVkRGF0YSwgZCA9PiBkLmRhdGUpKTtcblxuICAgIGNvbnN0IHNjYWxlWVBlciA9IGQzLnNjYWxlTGluZWFyKClcbiAgICAgIC5yYW5nZShbcHJvcHMuaGVpZ2h0IC0gcHJvcHMubWFyZ2luLnRvcCAtIHByb3BzLm1hcmdpbi5ib3R0b20sIDBdKVxuICAgICAgLmRvbWFpbihbMCwgMV0pO1xuXG4gICAgY29uc3Qgc2NhbGVZTnVtID0gZDMuc2NhbGVMaW5lYXIoKVxuICAgICAgLnJhbmdlKFtwcm9wcy5oZWlnaHQgLSBwcm9wcy5tYXJnaW4udG9wIC0gcHJvcHMubWFyZ2luLmJvdHRvbSwgMF0pXG4gICAgICAuZG9tYWluKFswLCBkMy5tYXgocmVzaGFwZWREYXRhLCBkID0+IGQubWVhbl90b3RhbCApXSk7XG5cbiAgICBjb25zdCBhcmVhRGVhdGggPSBkMy5hcmVhKClcbiAgICAgIC54KGQgPT4gc2NhbGVYKGQuZGF0YS5kYXRlKSlcbiAgICAgIC55MChkID0+IHByb3BzLmFic29sdXRlID8gc2NhbGVZTnVtKGRbMF0pIDogc2NhbGVZUGVyKGRbMF0gLyBkLmRhdGEubWVhbl90b3RhbCkpXG4gICAgICAueTEoZCA9PiBwcm9wcy5hYnNvbHV0ZSA/IHNjYWxlWU51bShkWzFdKSA6IHNjYWxlWVBlcihkWzFdIC8gZC5kYXRhLm1lYW5fdG90YWwpKVxuICAgICAgLmN1cnZlKGQzLmN1cnZlTW9ub3RvbmVYKTtcblxuICAgIGNvbnN0IHRyYW5zaXRpb24gPSBkMy50cmFuc2l0aW9uKClcbiAgICAgIC5kdXJhdGlvbig3NTApO1xuXG4gICAgY29uc3QgbGFiZWxzID0gdGhpcy5zZWxlY3Rpb24oKVxuICAgICAgLmFwcGVuZFNlbGVjdCgnZGl2LmxhYmVsLWNvbnRhaW5lcicpXG4gICAgICAuc2VsZWN0QWxsKCdkaXYubGFiZWwnKVxuICAgICAgLmRhdGEoc2VyaWVzRGVhdGgucmV2ZXJzZSgpLCAoZCwgaSkgPT4gZC5rZXkpO1xuXG4gICAgY29uc3QgbGFiZWxJbm5lciA9IGxhYmVscy5lbnRlcigpXG4gICAgICAuYXBwZW5kKCdkaXYnKVxuICAgICAgLmF0dHIoJ2NsYXNzJywgJ2xhYmVsJylcbiAgICAgIC5tZXJnZShsYWJlbHMpO1xuXG4gICAgbGFiZWxJbm5lci5hcHBlbmRTZWxlY3QoJ2Rpdi5sYWJlbC1ib3gnKVxuICAgICAgLnN0eWxlKCdiYWNrZ3JvdW5kJywgKGQsIGkpID0+IHByb3BzLmZpbGxzW2ldKTtcblxuICAgIGxhYmVsSW5uZXIuYXBwZW5kU2VsZWN0KCdkaXYubGFiZWwtdGV4dCcpXG4gICAgICAudGV4dChkID0+IGNsaWVudC5nZXRSZWdpb24oZC5rZXkuc3BsaXQoJ18nKVsxXSkudHJhbnNsYXRpb25zW3Byb3BzLmxvY2FsZV0pO1xuXG4gICAgbGFiZWxzLmV4aXQoKVxuICAgICAgLnJlbW92ZSgpO1xuXG4gICAgY29uc3QgZyA9IHRoaXMuc2VsZWN0aW9uKClcbiAgICAgIC5hcHBlbmRTZWxlY3QoJ3N2ZycpIC8vIHNlZSBkb2NzIGluIC4vdXRpbHMvZDMuanNcbiAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoKVxuICAgICAgLmF0dHIoJ2hlaWdodCcsIHByb3BzLmhlaWdodClcbiAgICAgIC5hcHBlbmRTZWxlY3QoJ2cnKVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHtwcm9wcy5tYXJnaW4ubGVmdH0sICR7cHJvcHMubWFyZ2luLnRvcH0pYCk7XG5cbiAgICBjb25zdCBkZWF0aENoYXJ0UGF0aHMgPSBnLmFwcGVuZFNlbGVjdCgnZy5hcmVhcycpXG4gICAgICAuc2VsZWN0QWxsKCdnLmFyZWEnKVxuICAgICAgLmRhdGEoc2VyaWVzRGVhdGgpXG4gICAgICAuam9pbignZycpXG4gICAgICAuYXR0cignY2xhc3MnLCAnYXJlYScpO1xuXG4gICAgZGVhdGhDaGFydFBhdGhzLmFwcGVuZCgncGF0aCcpO1xuXG4gICAgZGVhdGhDaGFydFBhdGhzLnNlbGVjdCgncGF0aCcpXG4gICAgICAuYXR0cignY2xhc3MnLCBmdW5jdGlvbihkKXtcbiAgICAgICAgY29uc29sZS5sb2coZC5rZXkpXG4gICAgICAgIHJldHVybiBkLmtleVxuICAgICAgfSlcbiAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAuYXR0cignZmlsbCcsIGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgcmV0dXJuICgocHJvcHMuZmlsbHNbaV0pID8gcHJvcHMuZmlsbHNbaV0gOiAnIzAwMCcpO1xuICAgICAgfSlcbiAgICAgIC5hdHRyKCdkJywgYXJlYURlYXRoKVxuICAgICAgLmF0dHIoJ3N0cm9rZScsIHByb3BzLnN0cm9rZSlcbiAgICAgIC5hdHRyKCdzdHJva2Utd2lkdGgnLCBwcm9wcy5zdHJva2Vfd2lkdGgpO1xuXG4gICAgZy5hcHBlbmRTZWxlY3QoJ2cuYXhpcy0teS5heGlzJylcbiAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgke3dpZHRoIC0gcHJvcHMubWFyZ2luLnJpZ2h0IC0gcHJvcHMubWFyZ2luLmxlZnR9LDApYClcbiAgICAgIC5jYWxsKGQzLmF4aXNSaWdodChwcm9wcy5hYnNvbHV0ZSA/IHNjYWxlWU51bSA6IHNjYWxlWVBlcikudGlja3MoMykudGlja0Zvcm1hdChwcm9wcy5hYnNvbHV0ZSA/IGZvcm1hdE51bSA6IGZvcm1hdFBlcikpO1xuXG4gICAgZy5hcHBlbmRTZWxlY3QoJ2cuYXhpcy0teC5heGlzJylcbiAgICAgIC50cmFuc2l0aW9uKHRyYW5zaXRpb24pXG4gICAgICAuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgwLCR7cHJvcHMuaGVpZ2h0IC0gcHJvcHMubWFyZ2luLmJvdHRvbSAtIHByb3BzLm1hcmdpbi50b3B9KWApXG4gICAgICAuY2FsbChkMy5heGlzQm90dG9tKHNjYWxlWCkudGlja3MoNCkudGlja0Zvcm1hdChkYXRlRm9ybWF0KSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTdGFja2VkQXJlYUNoYXJ0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lib/chart.js\n");

/***/ })

})